<%
  id = params[:id]
  environments = Environment.pluck(:permalink).unshift('global')
  deploy_groups = DeployGroup.all.group_by { |g| g.environment.permalink }.
    map { |e, gs| [e, gs.map(&:permalink).unshift('global')] }.
    push(['global', ['global']])
%>
<h1><%= id ? "Edit #{id}" : "New Secret" %></h1>

<section>
  <% url = (id ? admin_secret_path(id) : admin_secrets_path) %>
  <% method = (id ? :put : :post) %>
  <% data = (id ? SecretStorage.parse_secret_key(id) : (params[:secret] || {})) %>
  <%= form_tag url, class: "form-horizontal", method: method do %>
    <fieldset>
      <div class="form-group">
        <%= label_tag 'secret[environment_permalink]', "Environment", class: "col-lg-2 control-label" %>
        <div class="col-lg-4">
          <%= select_tag 'secret[environment_permalink]',
            options_for_select(environments, data[:environment_permalink]),
            class: "form-control", include_blank: true, disabled: !!id %>
        </div>
      </div>

      <div class="form-group">
        <%= label_tag 'secret[project_permalink]', "Project", class: "col-lg-2 control-label" %>
        <div class="col-lg-4">
          <%= select_tag 'secret[project_permalink]',
            options_for_select(@project_permalinks, data[:project_permalink]),
            class: "form-control", include_blank: true, disabled: !!id %>
        </div>
      </div>

      <div class="form-group">
        <%= label_tag 'secret[deploy_group_permalink]', "Deploy Group", class: "col-lg-2 control-label" %>
        <div class="col-lg-4">
          <%= select_tag 'secret[deploy_group_permalink]',
            options_for_select([['Loading ...', data[:deploy_group_permalink]]], data[:deploy_group_permalink]),
            class: "form-control", include_blank: true, disabled: !!id %>
        </div>
      </div>

      <div class="form-group">
        <%= label_tag 'secret[key]', 'Key', class: "col-lg-2 control-label" %>
        <div class="col-lg-6">
          <%= text_field_tag 'secret[key]', data[:key], class: "form-control", disabled: !!id %>
        </div>
      </div>

      <div class="form-group">
        <%= label_tag 'secret[value]', 'Value', class: "col-lg-2 control-label" %>
        <div class="col-lg-6">
          <%= text_area_tag 'secret[value]', '', class: "form-control", rows: 10 %>
          <div id="value_json_warning" class="alert-danger"></div>
        </div>
      </div>

      <% if @secret %>
        <% @secret.except(:key).each do |attribute, value| %>
          <div class="form-group">
            <%= label_tag attribute, attribute.to_s.titlecase, class: "col-lg-2 control-label" %>
            <div class="col-lg-6">
              <% if [:creator_id, :updater_id].include?(attribute) %>
                <% if user = User.find_by_id(value) %>
                  <%= link_to user.name_and_email, [:admin, user] %>
                <% else %>
                  <%= "Unknown user id:#{value}" %>
                <% end %>
              <% else %>
                <%= value %>
              <% end %>
            </div>
          </div>
        <% end %>
      <% end %>

      <div class="form-group">
        <div class="col-lg-offset-2 col-lg-10">
          <%= submit_tag 'Save', class: 'btn btn-primary' %>
          <% if id %>
            <%= link_to_delete admin_secret_path(id) %>
          <% else %>
            <%= submit_tag Admin::SecretsController::ADD_MORE, class: 'btn btn-default' %>
          <% end %>
        </div>
      </div>
    </fieldset>
  <% end %>
</section>

<script>
// when user changes the environment, fill in the possible deploy groups
$(function () {
  var deploy_group_list = <%= deploy_groups.to_h.to_json.html_safe %>;
  var $environments = $("#secret_environment_permalink");
  var $deploy_groups = $("#secret_deploy_group_permalink");

  $environments.change(function () {
    var possible_deploy_groups = (deploy_group_list[$environments.val()] || []);
    var val = $deploy_groups.val();

    // clear our current options
    $deploy_groups.empty();

    // fill in the now possible options
    $.each(possible_deploy_groups, function(i, e){
      $deploy_groups.append($("<option>", { value: e, html: e, selected: (e === val) }));
    });
  }).trigger("change");
});

// - when it looks like the user enters json ({} or []), tell them when it is invalid
// - when they correct it, clear the warning
// - when existing value is loaded, show the warning too
$(function () {
  var $value = $("#secret_value");
  var $warn = $("#value_json_warning");

  $value.keyup(function () {
    var val = $value.val();
    if(/^\s*[\{\[][\s\S]*[\}\]]\s*$/.test(val)){
      try {
        JSON.parse(val);
        $warn.hide();
      } catch(e) {
        $warn.text('Value is not valid json ( ' + e.toString() + ' )');
        $warn.show();
      }
    }
  }).trigger("keyup");
});

</script>
